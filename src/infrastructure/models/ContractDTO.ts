/* tslint:disable */
/* eslint-disable */
/**
 * DFMS API
 * DFMS node HTTP API. [Reference implementation in GO](https://github.com/proximax-storage/go-xpx-dfms-api-http) [API definition](https://github.com/proximax-storage/go-xpx-dfms-api)  API does not tries to follow idiomatic REST or other API patterns for reasons. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContractDTO
 */
export interface ContractDTO {
    /**
     * [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
     * @type {string}
     * @memberof ContractDTO
     */
    drive?: string;
    /**
     * Hex encoded public key.
     * @type {string}
     * @memberof ContractDTO
     */
    owner?: string;
    /**
     * Hex encoded public keys.
     * @type {Array<string>}
     * @memberof ContractDTO
     */
    replicators?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ContractDTO
     */
    root?: string;
    /**
     * Block height when the Contract was started.
     * @type {number}
     * @memberof ContractDTO
     */
    created?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    duration?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    space?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    replicas?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    percentApprovers?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    billingPrice?: number;
    /**
     * 
     * @type {number}
     * @memberof ContractDTO
     */
    billingPeriod?: number;
}

export function ContractDTOFromJSON(json: any): ContractDTO {
    return ContractDTOFromJSONTyped(json, false);
}

export function ContractDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'drive': !exists(json, 'drive') ? undefined : json['drive'],
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
        'replicators': !exists(json, 'replicators') ? undefined : json['replicators'],
        'root': !exists(json, 'root') ? undefined : json['root'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'space': !exists(json, 'space') ? undefined : json['space'],
        'replicas': !exists(json, 'replicas') ? undefined : json['replicas'],
        'percentApprovers': !exists(json, 'percentApprovers') ? undefined : json['percentApprovers'],
        'billingPrice': !exists(json, 'billingPrice') ? undefined : json['billingPrice'],
        'billingPeriod': !exists(json, 'billingPeriod') ? undefined : json['billingPeriod'],
    };
}

export function ContractDTOToJSON(value?: ContractDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'drive': value.drive,
        'owner': value.owner,
        'replicators': value.replicators,
        'root': value.root,
        'created': value.created,
        'duration': value.duration,
        'space': value.space,
        'replicas': value.replicas,
        'percentApprovers': value.percentApprovers,
        'billingPrice': value.billingPrice,
        'billingPeriod': value.billingPeriod,
    };
}


