/* tslint:disable */
/* eslint-disable */
/**
 * DFMS API
 * DFMS node HTTP API. [Reference implementation in GO](https://github.com/proximax-storage/go-xpx-dfms-api-http) [API definition](https://github.com/proximax-storage/go-xpx-dfms-api)  API does not tries to follow idiomatic REST or other API patterns for reasons. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ContractDTO,
    ContractDTOFromJSON,
    ContractDTOFromJSONTyped,
    ContractDTOToJSON,
} from './';

/**
 * 
 * @export
 * @interface SuperContractDTO
 */
export interface SuperContractDTO {
    /**
     * [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
     * @type {string}
     * @memberof SuperContractDTO
     */
    id?: string;
    /**
     * 
     * @type {ContractDTO}
     * @memberof SuperContractDTO
     */
    drive?: ContractDTO;
    /**
     * [Cid](https://github.com/multiformats/cid) (version 1) - special content identifier.
     * @type {string}
     * @memberof SuperContractDTO
     */
    file?: string;
    /**
     * 
     * @type {number}
     * @memberof SuperContractDTO
     */
    vmversion?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SuperContractDTO
     */
    functions?: Array<string>;
}

export function SuperContractDTOFromJSON(json: any): SuperContractDTO {
    return SuperContractDTOFromJSONTyped(json, false);
}

export function SuperContractDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuperContractDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'drive': !exists(json, 'drive') ? undefined : ContractDTOFromJSON(json['drive']),
        'file': !exists(json, 'file') ? undefined : json['file'],
        'vmversion': !exists(json, 'vmversion') ? undefined : json['vmversion'],
        'functions': !exists(json, 'functions') ? undefined : json['functions'],
    };
}

export function SuperContractDTOToJSON(value?: SuperContractDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'drive': ContractDTOToJSON(value.drive),
        'file': value.file,
        'vmversion': value.vmversion,
        'functions': value.functions,
    };
}


